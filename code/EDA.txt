import pandas as pd
import matplotlib.pyplot as plt

# Load the dataset
file_path = 'path_to_your_flight_dataset.csv'  
df = pd.read_csv(..................)# Replace with the correct path to the dataset Sofia

# Quick overview of the dataset
print(df.head())

# Summary statistics for the numerical columns
print(df.describe())

# Renaming the 'Date' column to 'Day' if necessary (depending on your dataset)
df.rename(columns={'Date': 'Day'}, inplace=True)

# Combine 'Day', 'Month', and 'Year' into a single 'Adjusted_Date' column
df['Adjusted_Date'] = pd.to_datetime(df[['Year', 'Month', 'Day']])

# Calculate total flight duration (hours + minutes)
df['Total_Duration'] = df['Duration_hours'] + df['Duration_min'] / 60  # Convert to total hours

# Basic EDA: Distribution of Flight Prices
plt.figure(figsize=(10, 6))
plt.hist(df['Price'], bins=50, color='skyblue', edgecolor='black')
plt.title('Distribution of Flight Prices', fontsize=16)
plt.xlabel('Price (INR)', fontsize=12)
plt.ylabel('Frequency', fontsize=12)
plt.grid(True)
plt.show()

# Distribution of Flight Durations (in hours)
plt.figure(figsize=(10, 6))
plt.hist(df['Total_Duration'], bins=50, color='lightgreen', edgecolor='black')
plt.title('Distribution of Flight Durations (Hours)', fontsize=16)
plt.xlabel('Duration (Hours)', fontsize=12)
plt.ylabel('Frequency', fontsize=12)
plt.grid(True)
plt.show()

# Relationship between Total Stops and Price
plt.figure(figsize=(10, 6))
df.groupby('Total_Stops')['Price'].mean().plot(kind='bar', color='salmon', edgecolor='black')
plt.title('Average Flight Price by Number of Stops', fontsize=16)
plt.xlabel('Total Stops', fontsize=12)
plt.ylabel('Average Price (INR)', fontsize=12)
plt.grid(True)
plt.show()

# Plot average flight price over time (using Adjusted Date)
plt.figure(figsize=(10, 6))
df.groupby('Adjusted_Date')['Price'].mean().plot(kind='line', marker='o', color='orange')
plt.title('Average Flight Price Over Time', fontsize=16)
plt.xlabel('Date', fontsize=12)
plt.ylabel('Average Price (INR)', fontsize=12)
plt.grid(True)
plt.show()

# Analyze the most frequent Origin-Destination (O/D) pairs
od_pairs = df.groupby(['Source', 'Destination']).size().reset_index(name='Count').sort_values(by='Count', ascending=False)
print(od_pairs.head())

# Analyze the most attractive destinations (highest count of flights arriving at each destination)
top_destinations = df['Destination'].value_counts().reset_index(name='Count').rename(columns={'index': 'Destination'}).sort_values(by='Count', ascending=False)
print(top_destinations.head())

# Mean price by airline
mean_price_by_airline = df.groupby('Airline')['Price'].mean().reset_index().sort_values(by='Price', ascending=False)
print(mean_price_by_airline)

# Airlines with the most number of flights
flights_by_airline = df['Airline'].value_counts().reset_index(name='Count').rename(columns={'index': 'Airline'}).sort_values(by='Count', ascending=False)
print(flights_by_airline)

# Identify airlines frequently used in long-haul flights (flights with duration > 10 hours)
long_haul_flights = df[df['Total_Duration'] > 10]
long_haul_by_airline = long_haul_flights['Airline'].value_counts().reset_index(name='Long_Haul_Count').rename(columns={'index': 'Airline'}).sort_values(by='Long_Haul_Count', ascending=False)
print(long_haul_by_airline)
